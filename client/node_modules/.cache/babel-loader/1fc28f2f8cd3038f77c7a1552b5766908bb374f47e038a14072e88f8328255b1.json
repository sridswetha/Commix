{"ast":null,"code":"var _jsxFileName = \"/Users/swey/Projects/Commix/client/src/Layout.js\",\n  _s = $RefreshSig$();\nimport { Outlet, Link } from 'react-router-dom';\nimport React, { useState, useRef, useEffect } from 'react';\nimport './Layout.css';\nimport add from './add.png';\nimport imagey from './imagey.png';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Layout() {\n  _s();\n  const [showModal, setShowModal] = useState(false); // a pop up for color picking options\n  const [showColors, setShowColors] = useState(false); // another pop up for color picking from a color picker\n  const [showImage, setShowImage] = useState(false); // another pop up for color picking from an image\n\n  // Change color on a colorpicker\n  const [color, setColors] = useState('#ffffff');\n  function handleColorChange(newColor) {\n    setColors(newColor);\n  }\n  const [image, setImage] = useState();\n  const [pickedColor, setPickedColor] = useState(null);\n\n  // Storing and colors onto the palette at the bottom\n  const [paletteColors, setPaletteColors] = useState([]);\n  function addColors(newColor) {\n    setPaletteColors(prevColors => [...prevColors, newColor]);\n  }\n\n  // Remove colors from pallette\n  function removeColors(i) {\n    setPaletteColors(prevColors => prevColors.filter((_, idx) => idx !== i));\n  }\n\n  // When a color from the pallette is chosen, it will automatically be copied\n  const [copied, setCopied] = useState(false);\n  function copyHex(hex) {\n    navigator.clipboard.writeText(hex) /* use this API to copy text! */.then(() => {\n      console.log(\"hex copied to clipboard:\", hex);\n      setCopied(true);\n      setTimeout(() => setCopied(false), 1500);\n    }).catch(err => {\n      console.error(\"hex copy failed\", err);\n    });\n  }\n\n  // Drawing a selected image onto a canvas\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    if (image && canvasRef.current) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      const img = new Image();\n      img.src = image;\n      img.onload = () => {\n        canvas.width = img.width;\n        canvas.height = img.height;\n        ctx.drawImage(img, 0, 0);\n      };\n    }\n  }, [image]);\n\n  // Functionality for us to choose each individual pixel of an image to obtain color hex\n  function handleCanvasClick(e) {\n    // Credit: chatgpt\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const rect = canvas.getBoundingClientRect();\n\n    // Get mouse click coordinates relative to canvas\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n\n    // Get scale factor between canvas size on screen vs real drawing size\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n\n    // Convert to real image coordinates\n    const realX = Math.floor(x * scaleX);\n    const realY = Math.floor(y * scaleY);\n\n    // Get pixel data\n    const pixel = ctx.getImageData(realX, realY, 1, 1).data;\n    const r = pixel[0];\n    const g = pixel[1];\n    const b = pixel[2];\n    const toHex = val => val.toString(16).padStart(2, '0');\n    const hex = `#${toHex(r)}${toHex(g)}${toHex(b)}`;\n    setPickedColor(hex);\n  }\n  function isColorDark(hex) {\n    hex = hex.replace('#', '');\n    const r = parseInt(hex.substring(0, 2), 16);\n    const g = parseInt(hex.substring(2, 4), 16);\n    const b = parseInt(hex.substring(4, 6), 16);\n    const luminance = 0.299 * r + 0.587 * g + 0.114 * b;\n    return luminance < 128;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"commix\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"tooltip\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"circle-icon\",\n          children: \"?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tooltiptext\",\n          children: \"click on a circle with a white halo to pick a color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"mix\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"mix\",\n          children: \"mix\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/unmix\",\n        className: \"unmix\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"unmix\",\n          children: \"unmix\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), copied && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toast\",\n      children: \"hex code copied!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"palette\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scrollable\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowModal(true),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: add,\n              alt: \"add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), paletteColors.map((color, idx) => {\n          const dark = isColorDark(color);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"colored-box-box\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"colored-box\",\n              style: {\n                backgroundColor: color\n              },\n              onClick: () => copyHex(color),\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: dark ? 'white' : 'black',\n                  pointerEvents: 'none'\n                },\n                children: color\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"remove\" // When x button clicked, remove box from palette\n                ,\n                onClick: e => {\n                  e.stopPropagation();\n                  removeColors(idx);\n                },\n                children: \"x\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 21\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 19\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: showColors ?\n        /*#__PURE__*/\n        // Opens up modal for color picker to add color from to palette\n        _jsxDEV(\"div\", {\n          className: \"color-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-picker\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"color\",\n              value: color,\n              onChange: e => handleColorChange(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-picker-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"add_color\",\n              onClick: () => addColors(color),\n              children: \"add color to palette\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"remove\",\n              id: \"main_exit\",\n              onClick: () => {\n                setShowColors(false);\n                setShowModal(false);\n              },\n              children: \"x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 15\n        }, this) : showImage ?\n        /*#__PURE__*/\n        // Opens up modal to choose colors from an image\n        _jsxDEV(\"div\", {\n          className: \"image-buttons\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-input-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                // Request a file from device\n                type: \"file\",\n                onChange: e => {\n                  const file = e.target.files[0];\n                  const reader = new FileReader();\n                  reader.onloadend = () => {\n                    setImage(reader.result);\n                  };\n                  if (file) {\n                    reader.readAsDataURL(file);\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 19\n            }, this), image && /*#__PURE__*/_jsxDEV(\"canvas\", {\n              ref: canvasRef,\n              className: \"upload-canvas\"\n              // Allows us to click on pixels of image drawn over canvas to get colors\n              ,\n              onClick: handleCanvasClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"colored_box\",\n              style: {\n                backgroundColor: pickedColor || \"transparent\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                id: \"add_color\",\n                onClick: () => addColors(pickedColor),\n                children: \" add color to palette\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"remove\",\n              id: \"main_exit\",\n              onClick: () => {\n                // Exit both modals\n                setShowImage(false);\n                setShowModal(false);\n              },\n              children: \"x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"small-button\",\n            id: \"color\",\n            onClick: () => setShowColors(true),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: add,\n              alt: \"add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"small-button\",\n            id: \"color\",\n            onClick: () => setShowImage(true),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: imagey,\n              alt: \"imagey\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"remove\",\n            id: \"main_exit\",\n            onClick: () => {\n              // Exit the main modal\n              setShowModal(false);\n            },\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n_s(Layout, \"JiDOd5bVDU7Tj/ZCkDRamVLKzyE=\");\n_c = Layout;\nexport default Layout;\nvar _c;\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"names":["Outlet","Link","React","useState","useRef","useEffect","add","imagey","jsxDEV","_jsxDEV","Fragment","_Fragment","Layout","_s","showModal","setShowModal","showColors","setShowColors","showImage","setShowImage","color","setColors","handleColorChange","newColor","image","setImage","pickedColor","setPickedColor","paletteColors","setPaletteColors","addColors","prevColors","removeColors","i","filter","_","idx","copied","setCopied","copyHex","hex","navigator","clipboard","writeText","then","console","log","setTimeout","catch","err","error","canvasRef","current","canvas","ctx","getContext","img","Image","src","onload","width","height","drawImage","handleCanvasClick","e","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","scaleX","scaleY","realX","Math","floor","realY","pixel","getImageData","data","r","g","b","toHex","val","toString","padStart","isColorDark","replace","parseInt","substring","luminance","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","id","onClick","alt","map","dark","style","backgroundColor","pointerEvents","stopPropagation","type","value","onChange","target","file","files","reader","FileReader","onloadend","result","readAsDataURL","ref","_c","$RefreshReg$"],"sources":["/Users/swey/Projects/Commix/client/src/Layout.js"],"sourcesContent":["import { Outlet, Link } from 'react-router-dom';\nimport React, { useState, useRef, useEffect } from 'react';\nimport './Layout.css'\nimport add from './add.png';\nimport imagey from './imagey.png';\n\n\nfunction Layout() {\n  const [showModal, setShowModal] = useState(false); // a pop up for color picking options\n  const [showColors, setShowColors] = useState(false); // another pop up for color picking from a color picker\n  const [showImage, setShowImage] = useState(false); // another pop up for color picking from an image\n\n  // Change color on a colorpicker\n  const [color, setColors] = useState('#ffffff'); \n  function handleColorChange(newColor){ \n    setColors(newColor)\n  }\n  const [image, setImage] = useState();\n  const [pickedColor, setPickedColor] = useState(null);\n\n  // Storing and colors onto the palette at the bottom\n  const [paletteColors, setPaletteColors] = useState([]); \n  function addColors(newColor){\n    setPaletteColors(prevColors => [...prevColors, newColor])\n  }\n\n  // Remove colors from pallette\n  function removeColors(i){\n    setPaletteColors(prevColors => prevColors.filter((_, idx) => idx !== i));\n  }\n\n  // When a color from the pallette is chosen, it will automatically be copied\n  const [copied, setCopied] = useState(false);\n  function copyHex(hex){ \n    navigator.clipboard.writeText(hex) /* use this API to copy text! */\n      .then(() => {\n        console.log(\"hex copied to clipboard:\", hex);\n        setCopied(true);\n        setTimeout(() => setCopied(false), 1500)\n      })\n      .catch((err) => {\n        console.error(\"hex copy failed\", err);\n      });\n  }\n\n  // Drawing a selected image onto a canvas\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    if (image && canvasRef.current) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      const img = new Image();\n      img.src = image;\n      img.onload = () => {\n        canvas.width = img.width;\n        canvas.height = img.height;\n        ctx.drawImage(img, 0, 0);\n      };\n    }\n  }, [image]);\n\n  // Functionality for us to choose each individual pixel of an image to obtain color hex\n  function handleCanvasClick(e) { // Credit: chatgpt\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const rect = canvas.getBoundingClientRect();\n  \n    // Get mouse click coordinates relative to canvas\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n  \n    // Get scale factor between canvas size on screen vs real drawing size\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n  \n    // Convert to real image coordinates\n    const realX = Math.floor(x * scaleX);\n    const realY = Math.floor(y * scaleY);\n  \n    // Get pixel data\n    const pixel = ctx.getImageData(realX, realY, 1, 1).data;\n    const r = pixel[0];\n    const g = pixel[1];\n    const b = pixel[2];\n  \n    const toHex = (val) => val.toString(16).padStart(2, '0');\n    const hex = `#${toHex(r)}${toHex(g)}${toHex(b)}`;\n  \n    setPickedColor(hex);\n  }\n\n  function isColorDark(hex){\n    hex = hex.replace('#', '');\n    const r = parseInt(hex.substring(0,2), 16);\n    const g = parseInt(hex.substring(2,4), 16);\n    const b = parseInt(hex.substring(4,6), 16);\n    const luminance = 0.299*r + 0.587*g + 0.114*b;\n    return luminance < 128;\n  }\n  \n\n  return (\n    <div className=\"container\">\n      <div className=\"text-container\"> \n        <h1>commix</h1>\n        {/* This is to get a little help button next to header */}\n        <span className=\"tooltip\">\n          <span className=\"circle-icon\">?</span>\n          <span className=\"tooltiptext\">click on a circle with a white halo to pick a color</span>\n        </span>\n      </div>\n\n      {/* Links to my mix page and unmix page */}\n      <div className=\"buttons\">\n        <Link to=\"/\" className=\"mix\">\n          <button id=\"mix\">mix</button>\n        </Link>\n        <Link to=\"/unmix\" className=\"unmix\">  \n          <button id=\"unmix\">unmix</button>\n        </Link>\n      </div>\n      <Outlet />\n\n      {/* Bottom color palette code */}\n      {copied && (<div className=\"toast\">hex code copied!</div>)}\n      <div className=\"palette\">\n        <div className=\"scrollable\"> \n          <div className=\"add\">  \n            {/* Add button opens up a pop up with two options (add from picker, add from image) */}\n            <button onClick={() => setShowModal(true)}>\n              <img src={add} alt=\"add\"></img>\n            </button>\n          </div>\n\n          {paletteColors.map((color, idx) => {\n            const dark = isColorDark(color);\n              return(\n                <div key={idx} className=\"colored-box-box\"> {/* Add a color to palette when */}\n                  <div\n                    key={idx}\n                    className=\"colored-box\"\n                    style = {{ backgroundColor : color }}\n                    onClick ={() => copyHex(color)}> {/* When box clicked, copy hex color */}\n                    <span style={{ color: dark ? 'white' : 'black', pointerEvents: 'none' }}>\n                      {color}\n                    </span>\n                    <button className=\"remove\"  // When x button clicked, remove box from palette\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        removeColors(idx);\n                        }}\n                      >\n                      x\n                    </button>\n                  </div>\n                </div>\n                );\n\n          })}\n        </div>\n      </div>\n\n      {showModal && (\n        <div className=\"modal\"> \n          <div className=\"modal-content\">\n            {showColors ? ( // Opens up modal for color picker to add color from to palette\n              <div className=\"color-container\">\n                <div className=\"color-picker\">   \n                    <input\n                      type=\"color\"\n                      value={color}\n                      onChange={(e) => handleColorChange(e.target.value)}\n                    />\n                </div>\n              <div className=\"color-picker-buttons\">\n                <button id=\"add_color\" onClick={() => addColors(color)}>add color to palette</button> \n                <button className=\"remove\" id=\"main_exit\" onClick={() => {\n                  setShowColors(false)\n                  setShowModal(false)\n                  }}>\n                x\n                </button>\n              </div>\n            </div>\n              \n            ) : showImage ? ( // Opens up modal to choose colors from an image\n              <div className=\"image-buttons\">\n                <div className=\"image-container\">\n                  <div className=\"file-input-wrapper\">\n                    <input // Request a file from device\n                      type=\"file\" \n                      onChange={(e) => {\n                        const file = e.target.files[0];\n                        const reader = new FileReader();\n                        reader.onloadend = () => {\n                          setImage(reader.result); \n                        };\n                        if (file){\n                          reader.readAsDataURL(file);\n                        }\n                      }}/>\n                  </div>  \n                    {image && \n                      <canvas \n                        ref={canvasRef}\n                        className=\"upload-canvas\" \n                        // Allows us to click on pixels of image drawn over canvas to get colors\n                        onClick={handleCanvasClick} />\n                    } \n\n                  <div className=\"colored_box\"\n                    style = {{backgroundColor : pickedColor || \"transparent\"}}>\n                    {/* Add color to palette from image*/}\n                    <button id=\"add_color\" onClick={() => addColors(pickedColor)}> add color to palette</button> \n                  </div>\n                <button className=\"remove\" id=\"main_exit\" onClick={() => { // Exit both modals\n                  setShowImage(false)\n                  setShowModal(false)\n                  }}>\n                x\n                </button>\n                </div>\n              </div>\n            ): (\n              <>\n              {/* On main modal: add from picker button */}\n              <button className=\"small-button\" id=\"color\" onClick={() => setShowColors(true)}>\n                <img src={add} alt=\"add\" /> \n              </button>\n              {/* On main modal: add from image button*/}\n              <button className=\"small-button\" id=\"color\" onClick={() => setShowImage(true)}>\n                <img src={imagey} alt=\"imagey\" />\n              </button>  \n                <button className=\"remove\" id=\"main_exit\" onClick={() => { // Exit the main modal\n                  setShowModal(false)\n                }}>\n                  x\n                </button>\n              </>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Layout"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}