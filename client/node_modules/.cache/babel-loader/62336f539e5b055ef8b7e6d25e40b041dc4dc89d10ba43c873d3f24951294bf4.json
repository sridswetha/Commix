{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./Unmix.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Unmix(){const[input1,setInput1]=useState('');// First input (unmixing color)\nconst[input2,setInput2]=useState('');// Second input (second color if wanted)\nconst isValidColor=color=>{const s=new Option().style;s.backgroundColor=color;return s.backgroundColor!=='';};// Output random colors based on one (unmixing color) or two inputs (unmixing + second input)\nconst[mode,setMode]=useState('random');const getColor=(input,targetColor)=>{if(!targetColor||!isValidColor(targetColor))return['#808080','#808080'];targetColor=targetColor.replace('#','');const r1=parseInt(targetColor.substring(0,2),16);const g1=parseInt(targetColor.substring(2,4),16);const b1=parseInt(targetColor.substring(4,6),16);let r2,g2,b2;if(!input||input.length===0){r2=Math.floor(Math.random()*256);g2=Math.floor(Math.random()*256);b2=Math.floor(Math.random()*256);}else{input=input.replace('#','');r2=parseInt(input.substring(0,2),16);g2=parseInt(input.substring(2,4),16);b2=parseInt(input.substring(4,6),16);}const r3=Math.max(0,Math.min(255,r1*2-r2));const g3=Math.max(0,Math.min(255,g1*2-g2));const b3=Math.max(0,Math.min(255,b1*2-b2));const toHex=c=>c.toString(16).padStart(2,'0');return[\"#\".concat(toHex(r2)).concat(toHex(g2)).concat(toHex(b2)),\"#\".concat(toHex(r3)).concat(toHex(g3)).concat(toHex(b3))];};const colors_input=getColor(input2,input1);const[randomColors,setRandomColors]=useState(['#808080','#808080']);const regenerateRandomColors=()=>{setRandomColors(getColor(\"\",input1));};// Purpose of useEffect is to automatically regenerate random colors when random colors button clicked\nuseEffect(()=>{if(mode==='random'){regenerateRandomColors();}},[mode,input1]);function isColorDark(hex){hex=hex.replace('#','');const r=parseInt(hex.substring(0,2),16);const g=parseInt(hex.substring(2,4),16);const b=parseInt(hex.substring(4,6),16);const luminance=0.299*r+0.587*g+0.114*b;return luminance<128;}return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-box\",children:[/*#__PURE__*/_jsx(\"div\",{// First and only input box (unmixed)\nclassName:\"unmixed\",style:{backgroundColor:isValidColor(input1)?input1:'#808080'}}),/*#__PURE__*/_jsx(\"input\",{className:\"color_picker\",type:\"color\",value:input2,onChange:e=>setInput1(e.target.value)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"results_container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mode_selector\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setMode('random');regenerateRandomColors();},children:\" random colors \"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setMode('input'),children:\" input a color \"})]}),mode==='random'?/*#__PURE__*/_jsxs(\"div\",{className:\"random_results\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"random_square\",children:/*#__PURE__*/_jsx(\"div\",{// First random color based on unmixed\nclassName:\"color_result random-circle \".concat(isColorDark(randomColors[0])?'light-text':'dark-text'),style:{backgroundColor:randomColors[0]},children:randomColors[0]!=='#808080'?randomColors[0]:''})}),/*#__PURE__*/_jsx(\"div\",{className:\"random_square\",children:/*#__PURE__*/_jsx(\"div\",{// Second random color based on unmixed\nclassName:\"color_result random-circle \".concat(isColorDark(randomColors[1])?'light-text':'dark-text'),style:{backgroundColor:randomColors[1]},children:randomColors[1]!=='#808080'?randomColors[1]:''})})]})/* Input and random color functionality */:/*#__PURE__*/_jsx(\"div\",{className:\"input_results\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"color_pair_row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-box\",children:[/*#__PURE__*/_jsx(\"div\",{// Input circle \nclassName:\"color_result input-circle \".concat(isColorDark(colors_input[0])?'light-text':'dark-text'),style:{backgroundColor:colors_input[0]}}),/*#__PURE__*/_jsx(\"input\",{className:\"color_picker\",type:\"color\",value:input2,onChange:e=>setInput2(e.target.value)})]}),/*#__PURE__*/_jsx(\"div\",{className:\"random_square\",children:/*#__PURE__*/_jsx(\"div\",{// Random circle (based on unmixed and input)\nclassName:\"color_result random-circle \".concat(isColorDark(colors_input[1])?'light-text':'dark-text'),style:{backgroundColor:colors_input[1]},children:colors_input[1]!=='#808080'?colors_input[1]:''})})]})})]})]});}export default Unmix;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","Unmix","input1","setInput1","input2","setInput2","isValidColor","color","s","Option","style","backgroundColor","mode","setMode","getColor","input","targetColor","replace","r1","parseInt","substring","g1","b1","r2","g2","b2","length","Math","floor","random","r3","max","min","g3","b3","toHex","c","toString","padStart","concat","colors_input","randomColors","setRandomColors","regenerateRandomColors","isColorDark","hex","r","g","b","luminance","className","children","type","value","onChange","e","target","onClick"],"sources":["/Users/swey/Projects/Commix/client/src/Unmix.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\nimport './Unmix.css'\n\nfunction Unmix() {\n    const [input1, setInput1] = useState(''); // First input (unmixing color)\n    const [input2, setInput2] = useState(''); // Second input (second color if wanted)\n    \n    const isValidColor = (color) => {\n        const s = new Option().style;\n        s.backgroundColor = color;\n        return s.backgroundColor !== ''; \n      }\n\n    // Output random colors based on one (unmixing color) or two inputs (unmixing + second input)\n    const [mode, setMode] = useState('random');\n    const getColor = (input, targetColor) => {\n      if (!targetColor || !isValidColor(targetColor)) return ['#808080', '#808080'];\n      targetColor = targetColor.replace('#', '');\n      const r1 = parseInt(targetColor.substring(0,2), 16);\n      const g1 = parseInt(targetColor.substring(2,4), 16);\n      const b1 = parseInt(targetColor.substring(4,6), 16);\n  \n      let r2, g2, b2;\n      if (!input || input.length === 0) {\n          r2 = Math.floor(Math.random() * 256);\n          g2 = Math.floor(Math.random() * 256);\n          b2 = Math.floor(Math.random() * 256);\n      } else {\n          input = input.replace('#', '');\n          r2 = parseInt(input.substring(0,2), 16);\n          g2 = parseInt(input.substring(2,4), 16);\n          b2 = parseInt(input.substring(4,6), 16);\n      }\n  \n      const r3 = Math.max(0, Math.min(255, r1 * 2 - r2));\n      const g3 = Math.max(0, Math.min(255, g1 * 2 - g2));\n      const b3 = Math.max(0, Math.min(255, b1 * 2 - b2));\n  \n      const toHex = (c) => c.toString(16).padStart(2, '0');\n      return [\n          `#${toHex(r2)}${toHex(g2)}${toHex(b2)}`,\n          `#${toHex(r3)}${toHex(g3)}${toHex(b3)}`\n      ];\n  };\n\n    const colors_input = getColor(input2, input1);\n    const [randomColors, setRandomColors] = useState(['#808080', '#808080']);\n    const regenerateRandomColors = () => {\n      setRandomColors(getColor(\"\", input1));\n    };\n\n    // Purpose of useEffect is to automatically regenerate random colors when random colors button clicked\n    useEffect(() => {\n      if (mode === 'random') {\n        regenerateRandomColors();\n      }\n    }, [mode, input1]);\n\n    function isColorDark(hex){\n      hex = hex.replace('#', '');\n      const r = parseInt(hex.substring(0,2), 16);\n      const g = parseInt(hex.substring(2,4), 16);\n      const b = parseInt(hex.substring(4,6), 16);\n      const luminance = 0.299*r + 0.587*g + 0.114*b;\n      return luminance < 128;\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"input-box\"> \n              <div // First and only input box (unmixed)\n                  className=\"unmixed\"\n                  style={{backgroundColor: isValidColor(input1) ? input1 : '#808080'}}\n              />\n              <input className=\"color_picker\"\n                type=\"color\"\n                value={input2}\n                onChange={(e) => setInput1(e.target.value)}\n              />\n            </div>\n\n            <div className=\"results_container\">\n                <div className=\"mode_selector\">\n                  <button onClick={() => { setMode('random'); regenerateRandomColors();}}> random colors </button>\n                  <button onClick={() => setMode('input')}> input a color </button>\n                </div>\n\n                {/* Random colors functionality */}\n                {mode === 'random' ? (\n                    <div className = \"random_results\">\n                      <div className = \"random_square\"> \n                      <div // First random color based on unmixed\n                          className={`color_result random-circle ${isColorDark(randomColors[0]) ? 'light-text' : 'dark-text'}`}\n                          style = {{backgroundColor: randomColors[0]}}\n                          >\n                            {randomColors[0] !== '#808080' ? randomColors[0] : ''}\n                        </div>\n                      </div>\n                      \n                      <div className = \"random_square\"> \n                        <div // Second random color based on unmixed\n                          className={`color_result random-circle ${isColorDark(randomColors[1]) ? 'light-text' : 'dark-text'}`}\n                          style = {{backgroundColor: randomColors[1]}}\n                          >\n                            {randomColors[1] !== '#808080' ? randomColors[1] : ''}\n                        </div>\n                      </div>\n                    </div>\n\n                    /* Input and random color functionality */\n                    ) : (\n                        <div className=\"input_results\">\n                          <div className=\"color_pair_row\">\n                            <div className=\"input-box\">\n                            <div // Input circle \n                              className={`color_result input-circle ${isColorDark(colors_input[0]) ? 'light-text' : 'dark-text'}`} \n                              style={{ backgroundColor: colors_input[0] }}\n                            />\n                              <input className=\"color_picker\"\n                                type=\"color\"\n                                value={input2}\n                                onChange={(e) => setInput2(e.target.value)}\n                              />\n                            </div>\n                          \n                          <div className=\"random_square\"> \n                            <div // Random circle (based on unmixed and input)\n                              className={`color_result random-circle ${isColorDark(colors_input[1]) ? 'light-text' : 'dark-text'}`} \n                              style={{ backgroundColor: colors_input[1] }}\n                            >\n                                {colors_input[1] !== '#808080' ? colors_input[1] : ''}\n\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    )}     \n                </div>       \n            </div>  \n        );\n  }\n\nexport default Unmix;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}