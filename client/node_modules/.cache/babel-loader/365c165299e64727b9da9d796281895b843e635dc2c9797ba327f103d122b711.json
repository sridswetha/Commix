{"ast":null,"code":"import React,{useState}from'react';import'./Home.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Home(){const[input1,setInput1]=useState('');// first color to be mixed\nconst[input2,setInput2]=useState('');// second color to be mixed\n// Checking if an input is actually a color (more pertinent when textboxes were used)\nconst isValidColor=color=>{const s=new Option().style;s.backgroundColor=color;return s.backgroundColor!=='';};// Midpoint color logic \nconst getMidpointColor=(input1,input2)=>{input1.trim();// get rid of spaces in input\ninput2.trim();if(input1.length===7&&input2.length===7){input1=input1.replace(\"#\",\"\");input2=input2.replace(\"#\",\"\");const r1=parseInt(input1.substring(0,2),16);const g1=parseInt(input1.substring(2,4),16);const b1=parseInt(input1.substring(4,6),16);const r2=parseInt(input2.substring(0,2),16);const g2=parseInt(input2.substring(2,4),16);const b2=parseInt(input2.substring(4,6),16);const r=Math.floor((r1+r2)/2);const g=Math.floor((g1+g2)/2);const b=Math.floor((b1+b2)/2);const toHex=c=>c.toString(16).padStart(2,'0');return\"#\".concat(toHex(r)).concat(toHex(g)).concat(toHex(b));// converts to hexcode\n}return'rgba(200, 200, 200, 0.3)';};// Ensures that initial viewing should not have any hex/rgba output in midpoint circle:\nconst showMidpointText=isValidColor(input1)&&isValidColor(input2)&&input1.length===7&&input2.length===7;const midpoint_color=getMidpointColor(input1,input2);// The text of the hexcode displayed in the midpoint box will adjust based on color\nfunction isColorDark(hex){hex=hex.replace('#','');const r=parseInt(hex.substring(0,2),16);const g=parseInt(hex.substring(2,4),16);const b=parseInt(hex.substring(4,6),16);const luminance=0.299*r+0.587*g+0.114*b;return luminance<128;}const dark=isColorDark(midpoint_color);return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mixing-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"color-wrapper\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"mixing\"// First (mixing) input box \n,style:{backgroundColor:isValidColor(input1)?input1:'rgba(200, 200, 200, 0.3)'}}),/*#__PURE__*/_jsx(\"input\",{type:\"color\",className:\"color_picker\",value:input1,onChange:e=>setInput1(e.target.value)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"color-wrapper\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"mixing\"// Second (mixing) input box \n,style:{backgroundColor:isValidColor(input2)?input2:'rgba(200, 200, 200, 0.3)'}}),/*#__PURE__*/_jsx(\"input\",{className:\"color_picker\",type:\"color\",value:input2,onChange:e=>setInput2(e.target.value)})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"midcolor_box\",children:/*#__PURE__*/_jsx(\"div\",{className:\"mixed \".concat(isColorDark(midpoint_color)?'light-text':'dark-text'),style:{backgroundColor:midpoint_color},children:showMidpointText?midpoint_color:''})})]});}export default Home;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Home","input1","setInput1","input2","setInput2","isValidColor","color","s","Option","style","backgroundColor","getMidpointColor","trim","length","replace","r1","parseInt","substring","g1","b1","r2","g2","b2","r","Math","floor","g","b","toHex","c","toString","padStart","concat","showMidpointText","midpoint_color","isColorDark","hex","luminance","dark","className","children","type","value","onChange","e","target"],"sources":["/Users/swey/Projects/Commix/client/src/Home.js"],"sourcesContent":["import React, {useState} from 'react'\nimport './Home.css'\n\nfunction Home() {\n  const [input1, setInput1] = useState(''); // first color to be mixed\n  const [input2, setInput2] = useState(''); // second color to be mixed\n\n  // Checking if an input is actually a color (more pertinent when textboxes were used)\n  const isValidColor = (color) => {\n    const s = new Option().style;\n    s.backgroundColor = color;\n    return s.backgroundColor !== ''; \n  }\n\n  // Midpoint color logic \n  const getMidpointColor = (input1, input2) => {\n    input1.trim(); // get rid of spaces in input\n    input2.trim();\n\n    if (input1.length === 7 && input2.length === 7){\n      input1 = input1.replace(\"#\", \"\")\n      input2 = input2.replace(\"#\", \"\")\n      const r1 = parseInt(input1.substring(0,2), 16);\n      const g1 = parseInt(input1.substring(2,4), 16);\n      const b1 = parseInt(input1.substring(4,6), 16);\n  \n      const r2 = parseInt(input2.substring(0,2), 16);\n      const g2 = parseInt(input2.substring(2,4), 16);\n      const b2 = parseInt(input2.substring(4,6), 16);\n      \n      const r = Math.floor((r1 + r2) / 2)\n      const g = Math.floor((g1 + g2) / 2)\n      const b = Math.floor((b1 + b2) / 2)\n      const toHex = (c) => c.toString(16).padStart(2, '0')\n      return `#${toHex(r)}${toHex(g)}${toHex(b)}`; // converts to hexcode\n    }\n    return 'rgba(200, 200, 200, 0.3)'; \n  }\n\n  // Ensures that initial viewing should not have any hex/rgba output in midpoint circle:\n  const showMidpointText = isValidColor(input1) && isValidColor(input2) && input1.length === 7 && input2.length === 7;\n\n  const midpoint_color = getMidpointColor(input1, input2);\n\n  // The text of the hexcode displayed in the midpoint box will adjust based on color\n  function isColorDark(hex){\n    hex = hex.replace('#', '');\n    const r = parseInt(hex.substring(0,2), 16);\n    const g = parseInt(hex.substring(2,4), 16);\n    const b = parseInt(hex.substring(4,6), 16);\n    const luminance = 0.299*r + 0.587*g + 0.114*b;\n    return luminance < 128;\n  }\n  const dark = isColorDark(midpoint_color);\n\n  return (\n    <div className=\"container\">\n      <div className=\"mixing-container\">\n        <div className=\"color-wrapper\">\n          <div \n            className=\"mixing\" // First (mixing) input box \n            style={{ backgroundColor: isValidColor(input1) ? input1 : 'rgba(200, 200, 200, 0.3)' }}\n            />\n          <input\n              type=\"color\"\n              className=\"color_picker\"\n              value={input1}\n              onChange={(e) => setInput1(e.target.value)}\n            />\n        </div>\n        <div className=\"color-wrapper\">\n          <div className=\"mixing\" // Second (mixing) input box \n            style={{ backgroundColor: isValidColor(input2) ? input2 : 'rgba(200, 200, 200, 0.3)'}}\n          />\n            <input className=\"color_picker\"\n              type=\"color\"\n              value={input2}\n              onChange={(e) => setInput2(e.target.value)}\n            />\n        </div>\n      </div>\n\n      {/*<div className=\"textbox_box\">\n        <input \n          type=\"text\" \n          value={input1}\n          onChange={(e) => setInput1(e.target.value)}\n          className=\"textbox\" \n          placeholder=\"enter hex code\"\n        />\n        <input \n          type=\"text\" \n          value={input2}\n          onChange={(e) => setInput2(e.target.value)}\n          className=\"textbox\" \n          placeholder=\"enter hex code\"\n        />\n      </div>\n      Omitted the textboxes because the color picker already has functionality for hex code input, rgba, and hsf. \n      */\n      }\n\n      {/* This is my (mixed) output box*/}\n      <div className=\"midcolor_box\">\n        <div\n          className={`mixed ${isColorDark(midpoint_color) ? 'light-text' : 'dark-text'}`}\n          style={{ backgroundColor: midpoint_color }}\n        >\n      {showMidpointText ? midpoint_color : ''}\n    </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Home"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}